---
- name: Tools Setup
  hosts: fresh_systems
  become: yes
  become_method: su
  become_user: root
  gather_facts: true

  vars:
    debian_ubuntu_packages:
      - sudo
      - vim-gtk
      - htop
      - screen
      - net-tools
      - git
      - cifs-utils
      - sudo
      - gnupg
      - curl
      - gcc
      - mlocate
    rhel_packages:
      - sudo
      - vim-enhanced
      - net-tools
      - git
      - cifs-utils
      - gnupg2
      - curl
      - gcc
      - mlocate

  tasks:
    - name: Debug the lsb fact (optional)
      debug:
        var: ansible_facts['lsb']

    - name: Determine if lsb is available
      set_fact:
        has_lsb: true
      when: "'lsb' in ansible_facts"

    - name: Determine the package manager for Debian/Ubuntu
      set_fact:
        pkg_manager: apt
      when: has_lsb and ("'Debian' in ansible_facts['lsb']['id'] or 'Ubuntu' in ansible_facts['lsb']['id']")

    - name: Check for RHEL release file
      stat:
        path: /etc/redhat-release
      register: rhel_release_check

    - name: Set pkg_manager for RHEL based on release file
      set_fact:
        pkg_manager: yum
      when: rhel_release_check.stat.exists

    - name: Ensure sudo is installed
      apt:
        name: sudo
        state: present
      when: pkg_manager == "apt"
      become: yes
      become_method: su
      become_user: root

    - name: "Add ansible_user to sudoers using root password"
      become: true
      become_method: su
      become_user: root
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^{{ ansible_user }} ALL'
        line: '{{ ansible_user }} ALL=(ALL:ALL) NOPASSWD:ALL'
      tags: always

    - name: Install essential tools for Debian/Ubuntu configurations
      apt:
        name: "{{ debian_ubuntu_packages }}"
        state: present
      when: pkg_manager == "apt"

    - name: Check package status for Debian/Ubuntu
      command: dpkg -l {{ item }}
      register: package_check
      changed_when: false
      loop: "{{ debian_ubuntu_packages }}"
      when: pkg_manager == "apt"
      loop_control:
        label: "{{ item }}"

    - name: Combine the package statuses
      set_fact:
        all_package_statuses: "{{ (all_package_statuses | default([])) + [item.stdout_lines[-1] if (item.stdout_lines is defined and item.stdout_lines|length > 0) else 'N/A'] }}"
      loop: "{{ package_check.results }}"
      when: pkg_manager == "apt"

    - name: Display all package statuses for Debian/Ubuntu
      debug:
        msg: "{{ all_package_statuses }}"
      when: pkg_manager == "apt"

    - name: Install essential tools for RHEL configurations
      dnf:
        name: "{{ rhel_packages }}"
        state: present
      when: pkg_manager == "yum"

    - name: Check package status for RHEL
      command: 
        cmd: dnf list installed {{ item }}
        warn: false
      register: dnf_package_check
      changed_when: false
      failed_when: "item not in dnf_package_check.stdout"
      loop: "{{ rhel_packages }}"
      when: pkg_manager == "yum"

    - name: Display package statuses for RHEL
      debug:
        var: dnf_package_check
      when: pkg_manager == "yum"

